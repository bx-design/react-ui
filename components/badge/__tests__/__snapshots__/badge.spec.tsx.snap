// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Badge /> Component Render toMatchSnapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <span
        class="badge badge-primary"
        data-testid="badge"
      >
        <style>
          
            .badge {
              display: inline-block;
              padding: 0.35em 0.65em;
              font-weight: 700;
              line-height: 1;
              text-align: center;
              white-space: nowrap;
              vertical-align: baseline;
              border-radius: 0.25rem;
              color: var(--bx-white);
            }
            .badge-primary {
              background-color: var(--bx-orange);
            }
            .badge-secondary {
              background-color: var(--bx-grey-mistery);
            }
            .badge-success {
              background-color: var(--bx-green-future);
            }
            .badge-dark {
              background-color: var(--bx-black);
            }
            .badge-danger {
              background-color: var(--bx-red-medium);
            }
            .badge-info {
              background-color: var(--bx-lblue);
              color: var(--bx-black);
            }
            .badge-warning {
              background-color: var(--bx-yellow-alert);
              color: var(--bx-black);
            }
            .badge-rounded {
              border-radius: 50rem;
            }
          
        </style>
        Badge
      </span>
    </div>
  </body>,
  "container": <div>
    <span
      class="badge badge-primary"
      data-testid="badge"
    >
      <style>
        
            .badge {
              display: inline-block;
              padding: 0.35em 0.65em;
              font-weight: 700;
              line-height: 1;
              text-align: center;
              white-space: nowrap;
              vertical-align: baseline;
              border-radius: 0.25rem;
              color: var(--bx-white);
            }
            .badge-primary {
              background-color: var(--bx-orange);
            }
            .badge-secondary {
              background-color: var(--bx-grey-mistery);
            }
            .badge-success {
              background-color: var(--bx-green-future);
            }
            .badge-dark {
              background-color: var(--bx-black);
            }
            .badge-danger {
              background-color: var(--bx-red-medium);
            }
            .badge-info {
              background-color: var(--bx-lblue);
              color: var(--bx-black);
            }
            .badge-warning {
              background-color: var(--bx-yellow-alert);
              color: var(--bx-black);
            }
            .badge-rounded {
              border-radius: 50rem;
            }
          
      </style>
      Badge
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
